/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_SCRL_MAX 30                  /* <--- New max speed setting (default: 10) */

#undef SCRL_UP
#undef SCRL_DOWN
#undef SCRL_LEFT
#undef SCRL_RIGHT

#define SCRL_UP MOVE_Y(U_MOUSE_SCRL_MAX)
#define SCRL_DOWN MOVE_Y(-U_MOUSE_SCRL_MAX)
#define SCRL_LEFT MOVE_X(-U_MOUSE_SCRL_MAX)
#define SCRL_RIGHT MOVE_X(U_MOUSE_SCRL_MAX)
#define U_MOUSE_MOVE_MAX 1800                     /* <--- New max speed setting (default: 600) */

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)

/ {
    behaviors {
        insert_home_end: insert_home_end {
            compatible = "zmk,behavior-tap-dance";
            label = "INSERT_HOME_END";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp END>, <&kp INSERT>;
        };
        mouse_move {
            time-to-max-speed-ms = <0>;
        };
        mouse_scroll {
            time-to-max-speed-ms = <400>; 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                                &kp LEFT_ALT  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &kp RIGHT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS        &kp ASTRK  &kp LPAR        &kp RPAR         &trans
&kp LCTRL  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE
&kp LSHFT  &kp F7    &kp F8  &kp F9    &kp F10   &kp F11      &kp F12    &kp LEFT        &kp DOWN   &kp UP_ARROW    &kp RIGHT        &kp ENTER
                             &trans    &mo 3     &kp SPACE    &kp SPACE  &mo 3           &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6     &kp N7          &kp N8          &kp N9            &kp N0             &trans
&trans     &trans  &trans  &trans  &trans  &trans       &trans     &kp MINUS       &kp EQUAL       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LSHFT  &trans  &trans  &trans  &trans  &trans       &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW    &kp ENTER
                           &trans  &mo 3   &kp SPACE    &kp SPACE  &mo 3           &kp RALT
            >;
        };

        SUPER_LAYER {
            bindings = <
&trans  &mkp LCLK       &mmv MOVE_UP    &mkp LCLK        &none           &none           &none            &kp KP_NUMBER_7      &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &msc SCRL_UP    &kp KP_DIVIDE    &kp KP_NUMBER_4      &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &kp PERIOD
&trans  &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3    &kp KP_MULTIPLY  &kp LA(KP_NUMBER_1)  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &kp ENTER
                                        &mt ESCAPE DEL   &trans          &none           &none            &trans               &none
            >;
        };
    };
};
